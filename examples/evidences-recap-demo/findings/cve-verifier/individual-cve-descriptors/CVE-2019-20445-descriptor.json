{
  "cve_id": "CVE-2019-20445",
  "library": "io.netty:netty",
  "affected_versions": [
    "< 4.1.44"
  ],
  "vulnerable_api": [
    "io.netty.handler.codec.http.HttpObjectDecoder",
    "io.netty.handler.codec.http.HttpRequestDecoder",
    "io.netty.handler.codec.http.HttpResponseDecoder"
  ],
  "cwe": [
    "CWE-444"
  ],
  "cvss_score": 9.1,
  "severity": "Critical",
  "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows a Content-Length header to be accompanied by a second Content-Length header, or by a Transfer-Encoding header. This vulnerability enables HTTP request smuggling attacks where attackers can send requests with conflicting headers that are interpreted differently by proxy servers and backend servers, potentially allowing cache poisoning, session hijacking, and bypassing security controls.",
  "remediation": "Upgrade to Netty version 4.1.44.Final or later. The fix ensures proper validation of HTTP headers according to RFC 7230, rejecting requests with multiple Content-Length headers or invalid combinations of Content-Length and Transfer-Encoding headers.",
  "fixed_version": "4.1.44.Final",
  "publication_date": "2020-01-29",
  "references": [
    "https://nvd.nist.gov/vuln/detail/CVE-2019-20445",
    "https://github.com/netty/netty/issues/9861",
    "https://github.com/netty/netty/pull/9865",
    "https://github.com/netty/netty/compare/netty-4.1.43.Final...netty-4.1.44.Final",
    "https://access.redhat.com/errata/RHSA-2020:0497",
    "https://lists.debian.org/debian-lts-announce/2020/02/msg00017.html",
    "https://usn.ubuntu.com/4532-1/"
  ],
  "source_details": "BlackDuck vulnerability scan detected this CVE in project dependencies. Vulnerability affects the HTTP codec component of Netty library used for HTTP request/response parsing. The issue was reported by security researcher ZeddYu and fixed in the official Netty repository.",
  "discovery_instruction": {
    "import_patterns": [
      "import io.netty.handler.codec.http.HttpObjectDecoder",
      "import io.netty.handler.codec.http.HttpRequestDecoder",
      "import io.netty.handler.codec.http.HttpResponseDecoder",
      "import io.netty.handler.codec.http.*",
      "import io.netty.*"
    ],
    "annotation_usage_patterns": [
      "@Override.*decode.*HttpObject",
      "@Override.*channelRead.*HttpRequest"
    ],
    "method_invocation_patterns": [
      "new HttpRequestDecoder()",
      "new HttpResponseDecoder()",
      "new HttpObjectDecoder()",
      "HttpObjectDecoder.decode(",
      "addLast.*HttpRequestDecoder",
      "addLast.*HttpResponseDecoder",
      "addLast.*HttpObjectDecoder",
      "pipeline.addLast.*HttpCodec",
      "Content-Length.*header",
      "Transfer-Encoding.*header"
    ],
    "object_instantiation_patterns": [
      "new HttpRequestDecoder()",
      "new HttpResponseDecoder()",
      "new HttpObjectDecoder(",
      "new HttpServerCodec()",
      "new HttpClientCodec()"
    ],
    "configuration_file_patterns": [
      "netty.*version.*4\\.1\\.[0-3][0-9]",
      "netty.*version.*4\\.1\\.4[0-3]",
      "netty-codec-http.*4\\.1\\.[0-3][0-9]",
      "netty-codec-http.*4\\.1\\.4[0-3]",
      "io.netty.*4\\.1\\.[0-3][0-9]",
      "io.netty.*4\\.1\\.4[0-3]"
    ],
    "dependency_declaration_patterns": [
      "<artifactId>netty</artifactId>.*<version>4\\.1\\.[0-3][0-9]",
      "<artifactId>netty-codec-http</artifactId>.*<version>4\\.1\\.[0-3][0-9]",
      "<artifactId>netty-codec-http</artifactId>.*<version>4\\.1\\.4[0-3]",
      "implementation.*io\\.netty:netty.*4\\.1\\.[0-3][0-9]",
      "implementation.*io\\.netty:netty-codec-http.*4\\.1\\.[0-3][0-9]",
      "implementation.*io\\.netty:netty-codec-http.*4\\.1\\.4[0-3]",
      "compile.*io\\.netty:netty.*4\\.1\\.[0-3][0-9]"
    ],
    "framework_integration_patterns": [
      "ChannelPipeline.*addLast.*HttpRequestDecoder",
      "ChannelPipeline.*addLast.*HttpResponseDecoder", 
      "ChannelPipeline.*addLast.*HttpObjectDecoder",
      "ChannelPipeline.*addLast.*HttpServerCodec",
      "ChannelPipeline.*addLast.*HttpClientCodec",
      "ServerBootstrap.*childHandler.*HttpRequestDecoder",
      "Bootstrap.*handler.*HttpResponseDecoder",
      "extends.*HttpObjectDecoder",
      "extends.*SimpleChannelInboundHandler<HttpObject>",
      "extends.*ChannelInboundHandlerAdapter.*HttpRequest"
    ]
  }
}
