
param(
    [string]$Path = "jal-dapi-ext",
    [string]$OutputFile = "llms-full.txt",
    [ValidateSet("Full", "Structure")]
    [string]$Mode = "Full"
)

$content = @()
$content += "# $(Split-Path $Path -Leaf) Documentation"
$content += ""
$content += "Generated: $(Get-Date)"
$content += ""

# Add README if exists
$readmePath = Join-Path $Path "README.md"
if (Test-Path $readmePath) {
    $content += "## Overview"
    $content += ""
    $content += Get-Content $readmePath -Raw
    $content += ""
}

# Process files
$extensions = "*.md", "*.py", "*.js", "*.ts", "*.json", "*.txt", "*.ps1", "*.java"
$files = Get-ChildItem -Path $Path -Include $extensions -Recurse | Where-Object { $_.Length -lt 500KB }


if ($Mode -eq "Full") {
    foreach ($file in $files) {
        $relativePath = $file.FullName.Replace((Resolve-Path $Path).Path, "").TrimStart('\')
        Write-Host "Processing: $relativePath"
        $content += "## File: $relativePath"
        $content += ""
        $fileContent = Get-Content $file.FullName -Raw -ErrorAction SilentlyContinue
        if ($file.Extension -eq ".md") {
            $content += $fileContent
        } else {
            $content += "``````"
            $content += $fileContent
            $content += "``````"
        }
        $content += ""
        $content += "---"
        $content += ""
    }
} elseif ($Mode -eq "Structure") {
    foreach ($file in $files) {
        $relativePath = $file.FullName.Replace((Resolve-Path $Path).Path, "").TrimStart('\')
        Write-Host "Processing: $relativePath"
        $content += "## File: $relativePath"
        $content += ""
        $content += "---"
        $content += ""
    }
}


# Determine output path - if OutputFile is an absolute path, use it; otherwise join with current directory
if ([System.IO.Path]::IsPathRooted($OutputFile)) {
    $outputPath = $OutputFile
} else {
    $outputPath = Join-Path (Get-Location) $OutputFile
}

# Create output directory if it doesn't exist
$outputDir = Split-Path $outputPath -Parent
if (-not (Test-Path $outputDir)) {
    New-Item -Path $outputDir -ItemType Directory -Force | Out-Null
}

$content | Out-File -FilePath $outputPath -Encoding UTF8

Write-Host "Generated: $outputPath"
Write-Host "Files processed: $($files.Count)"
